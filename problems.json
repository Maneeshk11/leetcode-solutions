[
  {
    "title": "3Sum",
    "problemType": "medium",
    "tags": ["Array", "Two Pointers", "Sorting"],
    "filename": "3sum"
  },
  {
    "title": "Two Sum",
    "problemType": "easy",
    "tags": ["Array", "Hash Table"],
    "filename": "two-sum"
  },
  {
    "title": "Add Two Numbers",
    "problemType": "medium",
    "tags": ["Linked List", "Math"],
    "filename": "add-two-numbers"
  },
  {
    "title": "Longest Substring Without Repeating Characters",
    "problemType": "medium",
    "tags": ["Hash Table", "String", "Sliding Window"],
    "filename": "lswpc"
  },
  {
    "title": "Reverse Integer",
    "problemType": "medium",
    "tags": ["Math"],
    "filename": "reverse-integer"
  },
  {
    "title": "3Sum Closest",
    "problemType": "medium",
    "tags": ["Array", "Two Pointers", "Sorting"],
    "filename": "3sum-closest"
  },
  {
    "title": "Count and Say",
    "problemType": "medium",
    "tags": ["String"],
    "filename": "count-and-say"
  },
  {
    "title": "Merge k Sorted Lists",
    "problemType": "hard",
    "tags": ["Linked List", "Divide and Conquer", "Heap"],
    "filename": "merge-k-sorted-lists"
  },
  {
    "title": "Palindrome Number",
    "problemType": "easy",
    "tags": ["Math"],
    "filename": "palindrome-number"
  },
  {
    "title": "Swap Nodes in Pairs",
    "problemType": "medium",
    "tags": ["Linked List", "Recursion"],
    "filename": "swap-nodes-in-pairs"
  },
  {
    "title": "Remove Nth Node From End of List",
    "problemType": "medium",
    "tags": ["Linked List", "Two Pointers"],
    "filename": "rem-nth-node-from-eo-list"
  },
  {
    "title": "Valid Parentheses",
    "problemType": "easy",
    "tags": ["Stack", "String"],
    "filename": "valid-parentheses"
  },
  {
    "title": "Next Permutation",
    "problemType": "medium",
    "tags": ["Array", "Two Pointers"],
    "filename": "next-permutation"
  },
  {
    "title": "Maximum Subarray",
    "problemType": "medium",
    "tags": ["Array", "Divide and Conquer", "Dynamic Programming"],
    "filename": "maximum-subarray"
  },
  {
    "title": "Majority Element",
    "problemType": "easy",
    "tags": ["Array", "Hash Table", "Divide and Conquer"],
    "filename": "majority-element"
  },
  {
    "title": "Majority Element II",
    "problemType": "medium",
    "tags": ["Array", "Hash Table"],
    "filename": "majority-element-2"
  },
  {
    "title": "Subarray Sum Equals K",
    "problemType": "medium",
    "tags": ["Array", "Hash Table", "Prefix Sum"],
    "filename": "subarray-sum-equals-k"
  },
  {
    "title": "Plus One",
    "problemType": "easy",
    "tags": ["Array", "Math"],
    "filename": "plus-one"
  },
  {
    "title": "Path Sum",
    "problemType": "easy",
    "tags": ["Tree", "Depth-first Search"],
    "filename": "path-sum"
  },
  {
    "title": "Path Sum II",
    "problemType": "medium",
    "tags": ["Tree", "Depth-first Search"],
    "filename": "path-sum-2"
  },
  {
    "title": "Rotate List",
    "problemType": "medium",
    "tags": ["Linked List", "Two Pointers"],
    "filename": "rotate-list"
  },
  {
    "title": "Unique Paths",
    "problemType": "medium",
    "tags": ["Dynamic Programming"],
    "filename": "unique-paths"
  },
  {
    "title": "Unique Paths II",
    "problemType": "medium",
    "tags": ["Dynamic Programming"],
    "filename": "unique-paths-2"
  },
  {
    "title": "Minimum Path Sum",
    "problemType": "medium",
    "tags": ["Dynamic Programming"],
    "filename": "minimum-path-sum"
  },
  {
    "title": "Merge Strings Alternately",
    "problemType": "easy",
    "tags": ["String"],
    "filename": "merge-strings-alternately"
  },
  {
    "title": "Greatest Common Divisor of Strings",
    "problemType": "easy",
    "tags": ["String"],
    "filename": "greatest-common-divisor-of-strings"
  },
  {
    "title": "Kids With the Greatest Number of Candies",
    "problemType": "easy",
    "tags": ["Array"],
    "filename": "kids-with-the-greatest"
  }, 
  {
    "title": "Can Place Flowers",
    "problemType": "easy",
    "tags": ["Array", "Greedy"],
    "filename": "can-place-flowers"
  },
  {
    "title": "Reverse Vowels of a String",
    "problemType": "easy",
    "tags": ["String", "Two Pointers"],
    "filename": "reverse-vowels-of-a-string"
  },
  {
    "title": "Reverse Words in a String",
    "problemType": "medium",
    "tags": ["String", "Two Pointers"],
    "filename": "reverse-words-in-a-string"
  },
  {
    "title": "Product of Array Except Self",
    "problemType": "medium",
    "tags": ["Array", "Prefix Sum"],
    "filename": "product-of-array-except-self"
  },
  {
    "title": "Move Zeroes",
    "problemType": "easy",
    "tags": ["Array", "Two Pointers"],
    "filename": "move-zeroes"
  },
  {
    "title": "Pascal's Triangle",
    "problemType": "easy",
    "tags": ["Array", "Dynamic Programming"],
    "filename": "pascals-triangle"
  },
  {
    "title": "Set Matrix Zeroes",
    "problemType": "medium",
    "tags": ["Array", "Hash Table", "Matrix"],
    "filename": "set-matrix-zeroes"
  },
  {
    "title": "Sort Colors",
    "problemType": "medium",
    "tags": ["Array", "Two Pointers", "Sorting"],
    "filename": "sort-colors"
  },
  {
    "title": "Best Time to Buy and Sell Stock",
    "problemType": "easy",
    "tags": ["Array", "Dynamic Programming"],
    "filename": "best-time-to-buy-and-sell-stock"
  },
  {
    "title": "Middle of the Linked List",
    "problemType": "easy",
    "tags": ["Linked List", "Two Pointers"],
    "filename": "middle-of-the-linked-list"
  },
  {
    "title": "Merge Two Sorted Lists",
    "problemType": "easy",
    "tags": ["Linked List", "Recursion"],
    "filename": "merge-two-sorted-lists"
  },
  {
    "title": "Delete Node in a Linked List",
    "problemType": "medium",
    "tags": ["Linked List"],
    "filename": "delete-node-in-a-linked-list"
  },
  {
    "title": "Linked List Cycle",
    "problemType": "easy",
    "tags": ["Linked List", "Hash Table", "Two Pointers"],
    "filename": "linked-list-cycle"
  },
  {
    "title": "Intersection of Two Linked Lists",
    "problemType": "easy",
    "tags": ["Linked List", "Hash Table", "Two Pointers"],
    "filename": "intersection-of-two-linked-lists"
  },
  {
    "title": "Palindrome Linked List",
    "problemType": "easy",
    "tags": ["Linked List", "Two Pointers", "Stack"],
    "filename": "palindrome-linked-list"
  },
  {
    "title": "Linked List Cycle II",
    "problemType": "medium",
    "tags": ["Linked List", "Two Pointers", "Hash Table"],
    "filename": "linked-list-cycle-2"
  }
  
]
